/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Final;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jtable_a_excel.ExportarExcel;
/**
 *
 * @author Home
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        direccionIP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        direccionMascara = new javax.swing.JTextField();
        AñadirTabla = new javax.swing.JButton();
        prefijoMascara = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        direccionIP8 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        direccionMascara8 = new javax.swing.JTextField();
        CalcularSubred = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        prefijoRed2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        direccionIP9 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        prefijoRed = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        AñadirTabla3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        CalcularSuperRed = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jToggleButton2 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaCalculator");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(228, 237, 246));

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(27, 28, 30));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CALCULADORA IP");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 70));

        jPanel5.setBackground(new java.awt.Color(246, 249, 255));

        jButton1.setBackground(new java.awt.Color(232, 240, 254));
        jButton1.setFont(new java.awt.Font("Roboto Medium", 0, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(26, 115, 232));
        jButton1.setText("Red");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(232, 240, 254));
        jButton2.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(26, 115, 232));
        jButton2.setText("SubNetting");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(232, 240, 254));
        jButton3.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(26, 115, 232));
        jButton3.setText("SuperNetting");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 130, 360));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(246, 249, 255)));

        jPanel1.setBackground(new java.awt.Color(246, 249, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setBackground(new java.awt.Color(218, 228, 240));
        jTable1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(27, 28, 30));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IP", "Mascara", "IP Binario", "Mascara Binario", "Clase Red", "Prefijo", "Dir.Red", "Dir.Broadcast", "#Hosts"
            }
        ));
        jTable1.setMaximumSize(new java.awt.Dimension(214, 0));
        jScrollPane1.setViewportView(jTable1);

        jPanel6.setBackground(new java.awt.Color(218, 228, 240));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 2, 2, 2, new java.awt.Color(218, 228, 240)), "Colocar IP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 0, 14), new java.awt.Color(67, 71, 80))); // NOI18N
        jPanel6.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(27, 28, 30));
        jLabel2.setText("Ingresar IP:");

        direccionIP.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        direccionIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionIPActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(27, 28, 30));
        jLabel3.setText("Ingresar Mascara:");

        direccionMascara.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        direccionMascara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionMascaraActionPerformed(evt);
            }
        });

        AñadirTabla.setBackground(new java.awt.Color(66, 133, 244));
        AñadirTabla.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        AñadirTabla.setForeground(new java.awt.Color(255, 255, 255));
        AñadirTabla.setText("Añadir");
        AñadirTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirTablaActionPerformed(evt);
            }
        });

        prefijoMascara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefijoMascaraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(prefijoMascara, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(direccionMascara, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(direccionIP))
                .addGap(14, 14, 14)
                .addComponent(AñadirTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(direccionIP)
                                .addGap(2, 2, 2)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(direccionMascara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prefijoMascara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(AñadirTabla)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setBackground(new java.awt.Color(240, 218, 255));
        jButton4.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(39, 16, 60));
        jButton4.setText("Limpiar Tabla");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(213, 228, 247));
        jButton5.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(15, 29, 42));
        jButton5.setText("Eliminar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon("C:\\1ORLANDO\\2024\\SCESI\\javaapplication111\\help_20dp_FILL0_wght400_GRAD0_opsz20.png")); // NOI18N
        jButton9.setBorder(null);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jToggleButton3.setIcon(new javax.swing.ImageIcon("C:\\1ORLANDO\\2024\\SCESI\\javaapplication111\\SAVEEE.png")); // NOI18N
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(14, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4))
                                .addGap(1, 1, 1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("", jPanel1);

        jPanel2.setBackground(new java.awt.Color(246, 249, 255));

        jPanel7.setBackground(new java.awt.Color(218, 228, 240));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 2, 2, 2, new java.awt.Color(218, 228, 240)), "SubNeting", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(67, 71, 80))); // NOI18N
        jPanel7.setToolTipText("");

        jLabel19.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(27, 28, 30));
        jLabel19.setText("Ingresar IP:");

        direccionIP8.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        direccionIP8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionIP8ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(27, 28, 30));
        jLabel20.setText("Ingresar Mascara:");

        direccionMascara8.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        direccionMascara8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionMascara8ActionPerformed(evt);
            }
        });

        CalcularSubred.setBackground(new java.awt.Color(66, 133, 244));
        CalcularSubred.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        CalcularSubred.setForeground(new java.awt.Color(255, 255, 255));
        CalcularSubred.setText("Calcular");
        CalcularSubred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularSubredActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(240, 218, 255));
        jButton6.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jButton6.setForeground(new java.awt.Color(39, 16, 60));
        jButton6.setText("Limpiar Tabla");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(27, 28, 30));
        jLabel21.setText("Ingresar # SubRedes:");

        jTextField1.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        prefijoRed2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefijoRed2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(prefijoRed2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(direccionMascara8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(direccionIP8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CalcularSubred)
                        .addGap(36, 36, 36))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(direccionIP8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jButton6))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prefijoRed2)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(direccionMascara8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel20)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(CalcularSubred)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable2.setBackground(new java.awt.Color(218, 228, 240));
        jTable2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTable2.setForeground(new java.awt.Color(27, 28, 30));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mascara", "Dir.Red", "Dir.Broadcast", "Prefijo", "#Hosts"
            }
        ));
        jTable2.setMaximumSize(new java.awt.Dimension(214, 0));
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setHeaderValue("Mascara");
            jTable2.getColumnModel().getColumn(2).setHeaderValue("Dir.Broadcast");
            jTable2.getColumnModel().getColumn(4).setHeaderValue("#Hosts");
        }

        jButton10.setIcon(new javax.swing.ImageIcon("C:\\1ORLANDO\\2024\\SCESI\\javaapplication111\\help_20dp_FILL0_wght400_GRAD0_opsz20.png")); // NOI18N
        jButton10.setBorder(null);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jToggleButton4.setIcon(new javax.swing.ImageIcon("C:\\1ORLANDO\\2024\\SCESI\\javaapplication111\\SAVEEE.png")); // NOI18N
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("", jPanel2);

        jPanel3.setBackground(new java.awt.Color(246, 249, 255));

        jButton11.setIcon(new javax.swing.ImageIcon("C:\\1ORLANDO\\2024\\SCESI\\javaapplication111\\help_20dp_FILL0_wght400_GRAD0_opsz20.png")); // NOI18N
        jButton11.setBorder(null);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(218, 228, 240));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 2, 2, 2, new java.awt.Color(218, 228, 240)), "SuperNeting", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(67, 71, 80))); // NOI18N
        jPanel10.setToolTipText("");

        jLabel22.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(27, 28, 30));
        jLabel22.setText("Ingresar IP:");

        direccionIP9.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        direccionIP9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionIP9ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(27, 28, 30));
        jLabel23.setText("PrefijoRed:");

        prefijoRed.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        prefijoRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefijoRedActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(240, 218, 255));
        jButton12.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        jButton12.setForeground(new java.awt.Color(39, 16, 60));
        jButton12.setText("LimpiarTabla");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        AñadirTabla3.setBackground(new java.awt.Color(66, 133, 244));
        AñadirTabla3.setFont(new java.awt.Font("Roboto Medium", 0, 16)); // NOI18N
        AñadirTabla3.setForeground(new java.awt.Color(255, 255, 255));
        AñadirTabla3.setText("Añadir");
        AñadirTabla3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AñadirTabla3MouseClicked(evt);
            }
        });
        AñadirTabla3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirTabla3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton12)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(direccionIP9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addComponent(prefijoRed, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AñadirTabla3)
                        .addGap(54, 54, 54))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionIP9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(11, 11, 11)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefijoRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(AñadirTabla3)))
        );

        jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable3.setBackground(new java.awt.Color(218, 228, 240));
        jTable3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTable3.setForeground(new java.awt.Color(27, 28, 30));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DireccionIP", "Prefijo"
            }
        ));
        jTable3.setMaximumSize(new java.awt.Dimension(214, 0));
        jScrollPane3.setViewportView(jTable3);

        CalcularSuperRed.setBackground(new java.awt.Color(66, 133, 244));
        CalcularSuperRed.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        CalcularSuperRed.setForeground(new java.awt.Color(255, 255, 255));
        CalcularSuperRed.setText("Calcular");
        CalcularSuperRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularSuperRedActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "SUPER-RED:\n"));

        jTextField2.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToggleButton2.setIcon(new javax.swing.ImageIcon("C:\\1ORLANDO\\2024\\SCESI\\javaapplication111\\SAVEEE.png")); // NOI18N
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CalcularSuperRed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(CalcularSuperRed, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("", jPanel3);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 810, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void direccionIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionIPActionPerformed

    private void direccionMascaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionMascaraActionPerformed
       // TODO add your handling code here:
       String ip = direccionIP.getText();
       String mascara = direccionMascara.getText();
       Red red = new Red(ip, mascara);
       String nuevoPrefijo =  String.valueOf(red.prefijoSubred())  ;
       
                prefijoMascara.setText(nuevoPrefijo);
         
    }//GEN-LAST:event_direccionMascaraActionPerformed

    private void AñadirTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirTablaActionPerformed
        // Obtener la dirección IP y la máscara ingresadas en los campos de texto
      
    String ip = direccionIP.getText();
    String mascara = direccionMascara.getText();

    try {
        // Crear un objeto Red con la dirección IP y la máscara ingresadas
        Red red = new Red(ip, mascara);

        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Agregar una fila a la tabla con los datos de la red
        model.addRow(new Object[]{red.getDireccionIp(), red.getMascaraSubred(), red.binarioIP(), red.binarioMascara(),
                                red.determinarClase(), red.prefijoSubred(),
                                red.direccionRed(), red.direccionBroadcast(),
                                red.numeroDeHosts()});
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_AñadirTablaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
         model.setRowCount(0); // Borra todos los registros de la tabla
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
         int selectedRow = jTable1.getSelectedRow();
         if (selectedRow != -1) { // Verifica si hay una fila seleccionada
          model.removeRow(selectedRow); // Elimina la fila seleccionada
          } else {
             JOptionPane.showMessageDialog(null, "Por favor, selecciona una fila para eliminar.", "Aviso", JOptionPane.WARNING_MESSAGE);
         }
         
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void CalcularSubredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularSubredActionPerformed

        String ip = direccionIP8.getText();
        String mascara = direccionMascara8.getText();
        int cantidadSubredes;

        try {
            cantidadSubredes = Integer.parseInt(jTextField1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un número válido para la cantidad de subredes", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Crear un objeto Subred con la dirección IP y la máscara ingresadas
            Subred subred = new Subred(ip, mascara,cantidadSubredes);

            // Verificar la dirección IP y la máscara
            if (!subred.verificarDireccionIP() || !subred.verificarMascara()) {
                JOptionPane.showMessageDialog(null, "Dirección IP o máscara inválida", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Obtener el modelo de la tabla
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setRowCount(0); // Limpiar la tabla antes de agregar nuevas filas

            // Calcular las subredes
            String[] subredes = subred.calcularSubredes(cantidadSubredes);
           
            for (int i = 0; i < subredes.length; i++) {
                            
                String dirBroadcast = subred.direccionBroadcast(subredes[i]);
                int prefijo = subred.prefijoSubred()+(int)Math.ceil(Math.sqrt(cantidadSubredes));
                String subredMascara = (String)convertirPrefijo(prefijo); 
                int numHosts = subred.numeroDeHosts()-1;

                // Agregar una fila a la tabla con los datos de la subred
                model.addRow(new Object[]{
                    subredMascara, subredes[i], dirBroadcast, prefijo, numHosts
                });
            }
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, "Error en la dirección IP o máscara: " + e.getMessage(), "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_CalcularSubredActionPerformed

    private void direccionMascara8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionMascara8ActionPerformed
        // TODO add your handling code here:
        String ip = direccionIP8.getText();
       String mascara = direccionMascara8.getText();
       Red red = new Red(ip, mascara);
       String nuevoPrefijo =  String.valueOf(red.prefijoSubred())  ;
       
                prefijoRed2.setText(nuevoPrefijo);
                
    }//GEN-LAST:event_direccionMascara8ActionPerformed

    private void direccionIP8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionIP8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionIP8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
         model.setRowCount(0); // Borra todos los registros de la tabla
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        // Crear una instancia de la ventana Ayuda
    Ayuda ayuda = new Ayuda();

    // Llamar al método setInstrucciones con el parámetro "HOLAAAAAAAA"
    ayuda.setInstrucciones(
            "La sección -Red- permite a los usuarios obtener información detallada sobre una red específica utilizando "
                + "\n su dirección IP y máscara de subred. "
            + "\n 1.-Colocar una IP valida y una mascara de red valida."
            + "\n El programara validara si los datos son validos "   
            + "\n 2.-El Programa se encarga de realizar todos los calculos,te  "
            + "\n devolvera la direccionRed, la Direccion de Broadcast, el prefijo, cantidad de hosts utilizables,etc."
            + "\n 3.-Si quieres verificar algunos datos puedes buscar en la tabla de verificacion"
            + "\n El boton ELIMINAR./ Eliminara de la tabla la fila seleccionadaP. "
           + "\n El boton EliminarTabla,borrara todos los datos de la tabla y la colocara en Default");

    // Hacer visible la ventana Ayuda
    ayuda.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        // Crear una instancia de la ventana Ayuda
    Ayuda ayuda = new Ayuda();
    ayuda.setInstrucciones(
            "La sección -Subred- se enfoca en subdividir una red en subredes más pequeñas. "
            + "\n 1.-Coloca una Ip valida, o te saldra un mesaje de advertencia "
            + "\n 2.-Colocar una mascara de red valida."
            + "\n 3.-Colocar la cantidad de Subredes validas, el programa te avisara si es posible o no"
                    + "\n El programara validara si los datos son validos "   
            + "\n El programa ira llenando la tabla con la cantidad de Subredes que pusiste "
            + "\n La tabla contendra informacion de:"
                    + "\n -La mascara subred.-Sera la misma para todos las Subredes "
                    + "\n -La direccionRed "
                    + "\n -La Direccion de Broadcast"
                    + "\n -El prefijo.-La misma para todos las subredes "
                    + "\n -Cantidad de host utilizables"
            + "\n El boton EliminarTabla,borrara todos los datos de la tabla y la colocara en Default");

            

    // Hacer visible la ventana Ayuda
    ayuda.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        // Crear una instancia de la ventana Ayuda
    Ayuda ayuda = new Ayuda();

    
    ayuda.setInstrucciones(
            "La seccion Supernetting se encargara de agrupar varias Redes en una SuperRed"
            + "\n 1.-Colocar una IP valida y una prefijo de red validos."
            + "\n El programara validara si los datos son validos "
                    + "\n El programara guardara esa informacion en una tabla. "
            + "\n 2.-Presionar el boton CALCULAR "
                    +"\n El Programa se encarga de realizar todos los calculos"
            + "\n devolvera una Direccion IP de una Super red que sera valida  para todas"
                    + "\n las redes que se encuentran en la tabla"
            + "\n Podemos copair este IP y usarlo en la seccion Red para obtener mas informacion de la SuperRed"
            + "\n El boton EliminarTabla,borrara todos los datos de la tabla y la colocara en Default");
    // Hacer visible la ventana Ayuda
    ayuda.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void direccionIP9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionIP9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionIP9ActionPerformed

    private void prefijoRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefijoRedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prefijoRedActionPerformed

    private void CalcularSuperRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularSuperRedActionPerformed
        // TODO add your handling code here:
        // Crear las listas para almacenar las IPs y sus equivalentes en binario
    ArrayList <String> redesIP= new ArrayList<>();//esta lista se guarda las IP de las redes de la columna0 del jTlabe3
    ArrayList <String> BinarioIP= new ArrayList<>();//Aqui se guarda los Ips de esas redes pero convertidos en Binario
     

                // Obtener el número de filas de la tabla
                int rowCount = jTable3.getRowCount();

                // Recorrer las filas y obtener los datos de la columna 1
                for (int i = 0; i < rowCount; i++) {
                    String data = (String) jTable3.getValueAt(i, 0);
                    redesIP.add(data);
                }
     for(int i=0;i<redesIP.size();i++){//ciclo para llenar nuestra BinarioIP
            String ip = redesIP.get(i) ;
            int prefijo =  Integer.parseInt(prefijoRed.getText()); 
          Red red = new Red(ip,convertirPrefijo(prefijo));
          BinarioIP.add(red.binarioIP());
          
     }
   //  System.out.println(BinarioIP);
     //redesIP.clear();
     int prefijo=  Integer.parseInt(prefijoRed.getText()); 
     String resultado = encontrarPrefijoComun(BinarioIP);//Preifjo comun valido para las Ips  
     String ipValido =generateRandomIP(resultado);// generarIPValida(resultado);
     // Imprimir el resultado de la superred
     jTextField2.setText(ipValido);
    System.out.println("SuperRed en Binario: " + resultado);
     System.out.println("IP Random: " + ipValido);
     
     
     
    
        
        
        
    }//GEN-LAST:event_CalcularSuperRedActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
         model.setRowCount(0); // Borra todos los registros de la tabla
    }//GEN-LAST:event_jButton12ActionPerformed

    private void AñadirTabla3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirTabla3ActionPerformed
        // Obtener la dirección IP ingresada en el campo de texto
    String ip = direccionIP9.getText();
    int prefijo;

    try {
        // Convertir el valor del JTextField a un entero
        prefijo = Integer.parseInt(prefijoRed.getText());
        
        // Verificar si el prefijo es mayor a 8
        if (prefijo <= 8) {
            throw new IllegalArgumentException("El prefijo debe ser mayor a 8");
        }
        
        // Crear un objeto Red con la dirección IP y el prefijo convertidos
        Red red = new Red(ip, convertirPrefijo(prefijo));

        // Verificar si la IP y el prefijo son válidos
        if (!red.verificarIP() || !red.verificarMascara()) {
            JOptionPane.showMessageDialog(null, "La dirección IP o el prefijo ingresados no son válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

        // Agregar una fila a la tabla con los datos de la red
        model.addRow(new Object[]{ip, prefijo});

    } catch (NumberFormatException e) {
        // Mostrar un mensaje de error si el prefijo no es un número válido
        JOptionPane.showMessageDialog(null, "Ingrese un número válido para el prefijo", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        // Mostrar un mensaje de error si la IP no es válida
        JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_AñadirTabla3ActionPerformed

    private void AñadirTabla3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AñadirTabla3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AñadirTabla3MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void prefijoMascaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefijoMascaraActionPerformed
        // TODO add your handling code here:
        try {
            int prefijoRed = Integer.parseInt(prefijoMascara.getText());

            if (prefijoRed < 1 || prefijoRed > 32) {
                JOptionPane.showMessageDialog(null, "Prefijo de red no válido");
                return;
            }

            String mascaraRed = convertirPrefijo(prefijoRed);
            direccionMascara.setText(mascaraRed);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Formato de prefijo de red inválido");
        }
        
    }//GEN-LAST:event_prefijoMascaraActionPerformed

    private void prefijoRed2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefijoRed2ActionPerformed
        // TODO add your handling code here:
        try {
            int prefijoRed = Integer.parseInt(prefijoRed2.getText());

            if (prefijoRed < 1 || prefijoRed > 32) {
                JOptionPane.showMessageDialog(null, "Prefijo de red no válido");
                return;
            }

            String mascaraRed = convertirPrefijo(prefijoRed);
            direccionMascara8.setText(mascaraRed);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Formato de prefijo de red inválido");
        }
    }//GEN-LAST:event_prefijoRed2ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        ExportarExcel obj;

        try {
            obj = new ExportarExcel();
            obj.exportarExcel(jTable2);
        } catch (IOException ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        ExportarExcel obj;

        try {
            obj = new ExportarExcel();
            obj.exportarExcel(jTable3);
        } catch (IOException ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        ExportarExcel obj;

        try {
            obj = new ExportarExcel();
            obj.exportarExcel(jTable1);
        } catch (IOException ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    //convierte un prefijo a mascara decimal
    private String convertirPrefijo(int prefijo) {
    int[] octetos = new int[4];
    for (int i = 0; i < 4; i++) {
        if (prefijo >= 8) {
            octetos[i] = 255;
            prefijo -= 8;
        } else if (prefijo > 0) {
            octetos[i] = 255 - ((1 << (8 - prefijo)) - 1);
            prefijo = 0;
        } else {
            octetos[i] = 0;
        }
    }
    return octetos[0] + "." + octetos[1] + "." + octetos[2] + "." + octetos[3];
}
    
    
    
    
  // Método para generar una IP aleatoria a partir del prefijo común
 
  public static String generarIPValida(String prefix) {
        // Dividir el prefijo en sus componentes numéricos
        String[] parts = prefix.split("\\.");
        int[] prefixParts = new int[4];
        for (int i = 0; i < 4; i++) {
            prefixParts[i] = Integer.parseInt(parts[i], 2);
        }

        // Generar un número aleatorio dentro del rango del prefijo
        Random random = new Random();
        int randomOffset = random.nextInt((int) Math.pow(2, 32 - prefix.length()));

        // Calcular la dirección IP sumando el offset al prefijo
        int[] ipParts = new int[4];
        for (int i = 0; i < 4; i++) {
            ipParts[i] = prefixParts[i];
            if (i == 3) {
                // Manejar el desbordamiento del último octeto
                ipParts[i] += randomOffset;
                ipParts[i] %= 256;
            }
        }

        // Formatear la dirección IP como una cadena
        StringBuilder ip = new StringBuilder();
        for (int i = 0; i < 4; i++) {
            ip.append(ipParts[i]);
            if (i < 3) {
                ip.append('.');
            }
        }

        return ip.toString();
    }

    
    
  
  public static String generateRandomIP(String prefix) {
        Random random = new Random();
        int totalAddresses = (int) Math.pow(2, 18); // Total de direcciones posibles
        int randomAddress = random.nextInt(totalAddresses); // Número aleatorio dentro del rango

        // Convertir el número aleatorio a binario de 18 bits
        String binaryAddress = Integer.toBinaryString(randomAddress);
        while (binaryAddress.length() < 18) {
            binaryAddress = "0" + binaryAddress;
        }

        // Combinar el prefijo base con el número aleatorio
        StringBuilder ipBinary = new StringBuilder(prefix.replace(".", "") + binaryAddress);
        StringBuilder ipDecimal = new StringBuilder();

        // Convertir el binario a formato decimal
        for (int i = 0; i < 32; i += 8) {
            String octet = ipBinary.substring(i, i + 8);
            ipDecimal.append(Integer.parseInt(octet, 2));
            if (i < 24) {
                ipDecimal.append(".");
            }
        }

        return ipDecimal.toString();
    }
  
  
  
  
  
    
  /* Método para encontrar el prefijo común más largo
    La longitud del prefijo común depende de cuántos bits iniciales son iguales
    en todas las direcciones IP. Este prefijo común puede terminar antes de los 32 bits completos.*/
private String encontrarPrefijoComun(ArrayList<String> binarioIPs) {
    if (binarioIPs == null || binarioIPs.isEmpty()) {
        return "";
    }
    // Tomar la primera IP como base para comparar
    String baseIP = binarioIPs.get(0);
    // Inicializar el prefijo común con la primera IP
    StringBuilder commonPrefix = new StringBuilder(baseIP);
    // Comparar con el resto de las IPs
    for (int i = 1; i < binarioIPs.size(); i++) {
        String currentIP = binarioIPs.get(i);
        for (int j = 0; j < commonPrefix.length(); j++) {
            if (j >= currentIP.length() || commonPrefix.charAt(j) != currentIP.charAt(j)) {
                // Si encontramos una diferencia, truncamos el prefijo común hasta ese punto
                commonPrefix.setLength(j);
                break;
            }
        }
    }
    // Devolver el prefijo común como la superred
    return commonPrefix.toString();
    /*La razón por la que utiliza toString() al final es para convertir el 
        objeto StringBuilder commonPrefix a una cadena de texto antes de devolverlo.*/
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AñadirTabla;
    private javax.swing.JButton AñadirTabla3;
    private javax.swing.JButton CalcularSubred;
    private javax.swing.JButton CalcularSuperRed;
    private javax.swing.JTextField direccionIP;
    private javax.swing.JTextField direccionIP8;
    private javax.swing.JTextField direccionIP9;
    private javax.swing.JTextField direccionMascara;
    private javax.swing.JTextField direccionMascara8;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JTextField prefijoMascara;
    private javax.swing.JTextField prefijoRed;
    private javax.swing.JTextField prefijoRed2;
    // End of variables declaration//GEN-END:variables
}
